{
  "swagger": "2.0",
  "info": {
    "title": "Social Media Users and Posts API",
    "version": "1.0.0",
    "description": "An API to manage Users and Posts"
  },
  "host": "cse-web-service.onrender.com",
  "basePath": "/",
  "schemes": ["https", "http"],
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "description": "OAuth 2.0 authorization",
      "flow": "implicit",
      "authorizationUrl": "https://cse-web-service.onrender.com/auth/google/callback",
      "scopes": {
        "read:user": "Read user data",
        "write:user": "Write user data",
        "read:post": "Read post data",
        "write:post": "Write post data"
      }
    }
  },
  "paths": {
    "/users/": {
      "get": {
        "tags": ["Social media users API endpoints"],
        "summary": "Retrieves a list of all users",
        "description": "List of users",
        "parameters": [],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "The document was not found (e.g. incorrect route)"
          }
        },
        "security": [
          {
            "OAuth2": ["read:user"]
          }
        ]
      },
      "post": {
        "tags": ["Social media users API endpoints"],
        "summary": "Creates a new user",
        "description": "Create new users",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "any"
                },
                "email": {
                  "type": "string",
                  "example": "example@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/users/{username}": {
      "get": {
        "tags": ["Social media users API endpoints"],
        "summary": " Retrieves information about a specific user based on their username.",
        "description": "Get users by username",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username string is required and functions as an id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "The user was not found (e.g. incorrect username)"
          }
        },
        "security": [
          {
            "OAuth2": ["read:user"]
          }
        ]
      }
    },
    "/users/{id}": {
      "put": {
        "tags": ["Social media users API endpoints"],
        "summary": "Updates information for a specific user based on their ID",
        "description": "Updates users information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "any"
                },
                "email": {
                  "type": "string",
                  "example": "example@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content success (indicates that a request has succeeded)"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["write:user"]
          }
        ]
      },
      "delete": {
        "tags": ["Social media users API endpoints"],
        "summary": "Deletes a specific user based on their ID",
        "description": "Deletes users",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["write:user"]
          }
        ]
      }
    },
    "/posts/": {
      "get": {
        "tags": ["Social media posts API endpoints"],
        "summary": "Retrieves a list of all posts",
        "description": "List of posts",
        "parameters": [],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "The document was not found (e.g. incorrect route)"
          }
        },
        "security": [
          {
            "OAuth2": ["read:post"]
          }
        ]
      },
      "post": {
        "tags": ["Social media posts API endpoints"],
        "summary": "Creates a new post",
        "description": "Creates new posts",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "any"
                },
                "content": {
                  "type": "string",
                  "example": "Lorem ipsum"
                },
                "author": {
                  "type": "string",
                  "example": "John Doe"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": ["tag1", "tag2"]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["write:post"]
          }
        ]
      }
    },
    "/posts/{tag}": {
      "get": {
        "tags": ["Social media posts API endpoints"],
        "summary": "Retrieves posts based on a specific tag",
        "description": "Each post has an array of tags, this will basically return posts with the same tags almost like an id",
        "operationId": "findPostByTags",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "description": "Post tag string is required and functions as an id",
            "required": true,
            "type": "string",
            "items": {
              "type": "string",
              "default": "available"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid tag name value"
          }
        },
        "security": [
          {
            "OAuth2": ["read:post"]
          }
        ]
      }
    },
    "/posts/{id}": {
      "put": {
        "tags": ["Social media posts API endpoints"],
        "summary": "Updates information for a specific post based on its ID",
        "description": "Updates posts information",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "example": "any"
                },
                "content": {
                  "type": "string",
                  "example": "Lorem ipsum"
                },
                "author": {
                  "type": "string",
                  "example": "John Doe"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "example": ["tag1", "tag2"]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content success (indicates that a request has succeeded)"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["write:post"]
          }
        ]
      },
      "delete": {
        "tags": ["Social media posts API endpoints"],
        "summary": "Deletes a specific post based on its ID",
        "description": "Deletes posts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "500": {
            "description": "Server Error"
          }
        },
        "security": [
          {
            "OAuth2": ["write:post"]
          }
        ]
      }
    }
  }
}
